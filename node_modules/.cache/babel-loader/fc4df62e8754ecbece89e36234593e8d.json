{"ast":null,"code":"var _jsxFileName = \"/Users/pedronunes/Desktop/react/reddit_client/my-app/src/features/main/subReddits/subReddits.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './subReddits.css';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'; //API json\n\nimport { getSubReddits } from '../../../app/API/Reddit'; //selectors + actions\n\nimport { selectSubReddits, addSubReddit, changeSelectedSubReddit } from './subRedditsSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function SubReddits() {\n  _s();\n\n  const dispatch = useDispatch();\n  const subReddits = useSelector(selectSubReddits);\n  useEffect(() => {\n    getSubReddits().then(jsonResponse => {\n      jsonResponse.forEach(dataItem => dispatch(addSubReddit({\n        name: dataItem.display_name,\n        url: dataItem.url,\n        id: dataItem.id,\n        icon: dataItem.community_icon.split(\"?\")[0]\n      })));\n    });\n  }, [dispatch]);\n\n  const handleChange = e => {\n    dispatch(changeSelectedSubReddit(e.target.value));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"subReddits\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Sub Reddits\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"selectForm\",\n      onChange: handleChange,\n      children: subReddits.map(subReddit => /*#__PURE__*/_jsxDEV(\"option\", {\n        className: \"selectOption\",\n        value: subReddit.url,\n        children: subReddit.url\n      }, subReddit.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SubReddits, \"cREn5cDhzWwXucr8gr5wbLdNRwg=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = SubReddits;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"SubReddits\");","map":{"version":3,"sources":["/Users/pedronunes/Desktop/react/reddit_client/my-app/src/features/main/subReddits/subReddits.js"],"names":["React","useEffect","useDispatch","useSelector","getSubReddits","selectSubReddits","addSubReddit","changeSelectedSubReddit","SubReddits","dispatch","subReddits","then","jsonResponse","forEach","dataItem","name","display_name","url","id","icon","community_icon","split","handleChange","e","target","value","map","subReddit"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,kBAAP;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC,C,CACA;;AACA,SAASC,aAAT,QAA8B,yBAA9B,C,CACA;;AACA,SAEIC,gBAFJ,EAGIC,YAHJ,EAIIC,uBAJJ,QAKW,mBALX;;AAUA,OAAO,SAASC,UAAT,GAAsB;AAAA;;AACzB,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAMQ,UAAU,GAAGP,WAAW,CAACE,gBAAD,CAA9B;AAEAJ,EAAAA,SAAS,CAAE,MAAM;AACbG,IAAAA,aAAa,GAAGO,IAAhB,CAAqBC,YAAY,IAAI;AAC7BA,MAAAA,YAAY,CAACC,OAAb,CAAqBC,QAAQ,IAAIL,QAAQ,CACrCH,YAAY,CACR;AACIS,QAAAA,IAAI,EAAED,QAAQ,CAACE,YADnB;AAEIC,QAAAA,GAAG,EAAEH,QAAQ,CAACG,GAFlB;AAGIC,QAAAA,EAAE,EAAEJ,QAAQ,CAACI,EAHjB;AAIIC,QAAAA,IAAI,EAAEL,QAAQ,CAACM,cAAT,CAAwBC,KAAxB,CAA8B,GAA9B,EAAmC,CAAnC;AAJV,OADQ,CADyB,CAAzC;AASH,KAVL;AAWH,GAZQ,EAYN,CAACZ,QAAD,CAZM,CAAT;;AAcA,QAAMa,YAAY,GAAIC,CAAD,IAAM;AACvBd,IAAAA,QAAQ,CAACF,uBAAuB,CAACgB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAxB,CAAR;AACH,GAFD;;AAIA,sBACI;AAAS,IAAA,EAAE,EAAC,YAAZ;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAA+B,MAAA,QAAQ,EAAEH,YAAzC;AAAA,gBACKZ,UAAU,CAACgB,GAAX,CAAgBC,SAAS,iBACtB;AAAQ,QAAA,SAAS,EAAC,cAAlB;AACI,QAAA,KAAK,EAAEA,SAAS,CAACV,GADrB;AAAA,kBAGMU,SAAS,CAACV;AAHhB,SAESU,SAAS,CAACT,EAFnB;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH;;GApCeV,U;UACKN,W,EACEC,W;;;KAFPK,U;AAoCf","sourcesContent":["import React from 'react';\nimport './subReddits.css';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n//API json\nimport { getSubReddits } from '../../../app/API/Reddit';\n//selectors + actions\nimport {\n    \n    selectSubReddits, \n    addSubReddit,\n    changeSelectedSubReddit\n    } from './subRedditsSlice';\n\n\n\n\nexport function SubReddits() {\n    const dispatch = useDispatch();\n    const subReddits = useSelector(selectSubReddits);\n    \n    useEffect( () => {\n        getSubReddits().then(jsonResponse => {\n                jsonResponse.forEach(dataItem => dispatch(\n                    addSubReddit(\n                        {\n                            name: dataItem.display_name,\n                            url: dataItem.url,\n                            id: dataItem.id,\n                            icon: dataItem.community_icon.split(\"?\")[0],\n                        }\n                    )));\n            })\n    }, [dispatch]);\n    \n    const handleChange = (e) =>{\n        dispatch(changeSelectedSubReddit(e.target.value))\n    };\n\n    return (\n        <section id=\"subReddits\">\n            <h1>Sub Reddits</h1>\n            <select className=\"selectForm\" onChange={handleChange}>\n                {subReddits.map( subReddit => (\n                    <option className=\"selectOption\"\n                        value={subReddit.url} \n                        key={subReddit.id}\n                        >{subReddit.url}\n                    </option>\n                ))}\n            </select>\n        </section>\n    );\n};"]},"metadata":{},"sourceType":"module"}