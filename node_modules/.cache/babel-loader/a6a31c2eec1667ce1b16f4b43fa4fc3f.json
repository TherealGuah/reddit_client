{"ast":null,"code":"var _jsxFileName = \"/Users/pedronunes/Desktop/react/reddit_client/my-app/src/features/main/subReddits/subReddits.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './subReddits.css';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom'; //API json\n\nimport { getSubReddits } from '../../../app/API/Reddit'; //selectors + actions\n\nimport { selectSubReddit, selectSubReddits, addSubReddit, changeSelectedSubReddit } from './subRedditsSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function SubReddits(props) {\n  _s();\n\n  const dispatch = useDispatch();\n  const subReddits = useSelector(selectSubReddits);\n  const selectedSubReddit = useSelector(selectSubReddit);\n  useEffect(() => {\n    getSubReddits().then(jsonResponse => {\n      jsonResponse.forEach(dataItem => dispatch(addSubReddit({\n        name: dataItem.display_name,\n        url: dataItem.url,\n        id: dataItem.id,\n        icon: dataItem.community_icon.split(\"?\")[0]\n      })));\n    });\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Sub Reddits\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      children: subReddits.map(subReddit => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: subReddit.name,\n        onChange: () => dispatch(changeSelectedSubReddit(subReddit.url)),\n        children: subReddit.url\n      }, subReddit.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SubReddits, \"/6biuPuIYYpalxURIO18brIgBtU=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = SubReddits;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"SubReddits\");","map":{"version":3,"sources":["/Users/pedronunes/Desktop/react/reddit_client/my-app/src/features/main/subReddits/subReddits.js"],"names":["React","useEffect","useDispatch","useSelector","Link","getSubReddits","selectSubReddit","selectSubReddits","addSubReddit","changeSelectedSubReddit","SubReddits","props","dispatch","subReddits","selectedSubReddit","then","jsonResponse","forEach","dataItem","name","display_name","url","id","icon","community_icon","split","map","subReddit"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,kBAAP;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,IAAT,QAAqB,kBAArB,C,CACA;;AACA,SAASC,aAAT,QAA8B,yBAA9B,C,CACA;;AACA,SACIC,eADJ,EAEIC,gBAFJ,EAGIC,YAHJ,EAIIC,uBAJJ,QAKW,mBALX;;AAUA,OAAO,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AAC9B,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAMW,UAAU,GAAGV,WAAW,CAACI,gBAAD,CAA9B;AACA,QAAMO,iBAAiB,GAAGX,WAAW,CAACG,eAAD,CAArC;AAEAL,EAAAA,SAAS,CAAE,MAAM;AACbI,IAAAA,aAAa,GAAGU,IAAhB,CAAqBC,YAAY,IAAI;AAC7BA,MAAAA,YAAY,CAACC,OAAb,CAAqBC,QAAQ,IAAIN,QAAQ,CACrCJ,YAAY,CACR;AACIW,QAAAA,IAAI,EAAED,QAAQ,CAACE,YADnB;AAEIC,QAAAA,GAAG,EAAEH,QAAQ,CAACG,GAFlB;AAGIC,QAAAA,EAAE,EAAEJ,QAAQ,CAACI,EAHjB;AAIIC,QAAAA,IAAI,EAAEL,QAAQ,CAACM,cAAT,CAAwBC,KAAxB,CAA8B,GAA9B,EAAmC,CAAnC;AAJV,OADQ,CADyB,CAAzC;AASH,KAVL;AAWH,GAZQ,EAYN,CAACb,QAAD,CAZM,CAAT;AAeA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBACKC,UAAU,CAACa,GAAX,CAAgBC,SAAS,iBACtB;AACI,QAAA,KAAK,EAAEA,SAAS,CAACR,IADrB;AAGI,QAAA,QAAQ,EAAE,MAAKP,QAAQ,CAACH,uBAAuB,CAACkB,SAAS,CAACN,GAAX,CAAxB,CAH3B;AAAA,kBAIMM,SAAS,CAACN;AAJhB,SAESM,SAAS,CAACL,EAFnB;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YAFJ,eAaI;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH;;GArCeZ,U;UACKR,W,EACEC,W,EACOA,W;;;KAHdO,U;AAqCf","sourcesContent":["import React from 'react';\nimport './subReddits.css';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\n//API json\nimport { getSubReddits } from '../../../app/API/Reddit';\n//selectors + actions\nimport {\n    selectSubReddit,\n    selectSubReddits, \n    addSubReddit,\n    changeSelectedSubReddit\n    } from './subRedditsSlice';\n\n\n\n\nexport function SubReddits(props) {\n    const dispatch = useDispatch();\n    const subReddits = useSelector(selectSubReddits);\n    const selectedSubReddit = useSelector(selectSubReddit);\n    \n    useEffect( () => {\n        getSubReddits().then(jsonResponse => {\n                jsonResponse.forEach(dataItem => dispatch(\n                    addSubReddit(\n                        {\n                            name: dataItem.display_name,\n                            url: dataItem.url,\n                            id: dataItem.id,\n                            icon: dataItem.community_icon.split(\"?\")[0],\n                        }\n                    )));\n            })\n    }, [dispatch]);\n    \n\n    return (\n        <section>\n            <label>Sub Reddits</label>\n            <select>\n                {subReddits.map( subReddit => (\n                    <option \n                        value={subReddit.name} \n                        key={subReddit.id}\n                        onChange={()=> dispatch(changeSelectedSubReddit(subReddit.url))}\n                        >{subReddit.url}\n                        </option>\n                    )\n                )}\n            </select>\n            <p></p>\n        </section>\n    );\n};"]},"metadata":{},"sourceType":"module"}