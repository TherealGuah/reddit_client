{"ast":null,"code":"var _jsxFileName = \"/Users/pedronunes/Desktop/react/reddit_client/my-app/src/features/main/main.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Switch, Route } from \"react-router-dom\";\nimport './main.css';\nimport { SubReddits } from './subReddits/subReddits';\nimport { PostsList } from './posts/postsList';\nimport { Post } from './posts/post/post'; // from postsList\n\nimport { getSubredditPosts } from '../../../app/API/Reddit';\nimport { selectSubReddit } from '../subReddits/subRedditsSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { addPosts } from './postsSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Main() {\n  _s();\n\n  const activeSubReddit = useSelector(selectSubReddit);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    getSubredditPosts(activeSubReddit).then(jsonData => {\n      console.log(jsonData);\n      jsonData.forEach(item => dispatch(addPosts({\n        author: item.author,\n        postId: item.id,\n        title: item.title,\n        ups: item.ups,\n        upVoteRatio: item.upvote_ratio,\n        url: item.url,\n        text: item.selftext,\n        numComments: item.num_comments,\n        created: item.created_utc,\n        permalink: item.permalink\n      })));\n    });\n  }, [activeSubReddit, dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(SubReddits, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"posts\",\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(PostsList, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/Post\",\n          children: /*#__PURE__*/_jsxDEV(Post, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Main, \"XXXf0OI66gXepJjVcXcLqIb6+i8=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/pedronunes/Desktop/react/reddit_client/my-app/src/features/main/main.js"],"names":["React","Switch","Route","SubReddits","PostsList","Post","getSubredditPosts","selectSubReddit","useDispatch","useSelector","useEffect","addPosts","Main","activeSubReddit","dispatch","then","jsonData","console","log","forEach","item","author","postId","id","title","ups","upVoteRatio","upvote_ratio","url","text","selftext","numComments","num_comments","created","created_utc","permalink"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,MADJ,EAEIC,KAFJ,QAGO,kBAHP;AAIA,OAAO,YAAP;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,SAASC,IAAT,QAAqB,mBAArB,C,CACA;;AACA,SAASC,iBAAT,QAAkC,yBAAlC;AACA,SAASC,eAAT,QAAgC,+BAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,QAAT,QAAyB,cAAzB;;AAKA,OAAO,SAASC,IAAT,GAAgB;AAAA;;AAEnB,QAAMC,eAAe,GAAGJ,WAAW,CAACF,eAAD,CAAnC;AACA,QAAMO,QAAQ,GAAGN,WAAW,EAA5B;AAIAE,EAAAA,SAAS,CAAE,MAAM;AACbJ,IAAAA,iBAAiB,CAACO,eAAD,CAAjB,CACCE,IADD,CACOC,QAAQ,IAAI;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAA,MAAAA,QAAQ,CAACG,OAAT,CAAkBC,IAAI,IAClBN,QAAQ,CACJH,QAAQ,CACJ;AACIU,QAAAA,MAAM,EAAED,IAAI,CAACC,MADjB;AAEIC,QAAAA,MAAM,EAAEF,IAAI,CAACG,EAFjB;AAGIC,QAAAA,KAAK,EAAEJ,IAAI,CAACI,KAHhB;AAIIC,QAAAA,GAAG,EAAEL,IAAI,CAACK,GAJd;AAKIC,QAAAA,WAAW,EAAEN,IAAI,CAACO,YALtB;AAMIC,QAAAA,GAAG,EAAER,IAAI,CAACQ,GANd;AAOIC,QAAAA,IAAI,EAAET,IAAI,CAACU,QAPf;AAQIC,QAAAA,WAAW,EAAEX,IAAI,CAACY,YARtB;AASIC,QAAAA,OAAO,EAAEb,IAAI,CAACc,WATlB;AAUIC,QAAAA,SAAS,EAAEf,IAAI,CAACe;AAVpB,OADI,CADJ,CADZ;AAkBH,KArBD;AAsBH,GAvBQ,EAuBN,CAACtB,eAAD,EAAkBC,QAAlB,CAvBM,CAAT;AA0BA,sBACI;AAAA,4BACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAS,MAAA,EAAE,EAAC,OAAZ;AAAA,6BACI,QAAC,MAAD;AAAA,gCACI,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,GAAlB;AAAA,iCACI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,OAAlB;AAAA,iCACI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;GAhDeF,I;UAEYH,W,EACPD,W;;;KAHLI,I","sourcesContent":["import React from 'react';\nimport {\n    Switch,\n    Route\n} from \"react-router-dom\";\nimport './main.css';\nimport { SubReddits } from './subReddits/subReddits';\nimport { PostsList } from './posts/postsList';\nimport { Post } from './posts/post/post';\n// from postsList\nimport { getSubredditPosts } from '../../../app/API/Reddit';\nimport { selectSubReddit } from '../subReddits/subRedditsSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { addPosts } from './postsSlice';\n\n\n\n\nexport function Main() {\n    \n    const activeSubReddit = useSelector(selectSubReddit);\n    const dispatch = useDispatch();\n    \n    \n\n    useEffect( () => {\n        getSubredditPosts(activeSubReddit)\n        .then( jsonData => {\n            console.log(jsonData);\n            jsonData.forEach( item => \n                dispatch(\n                    addPosts(\n                        {\n                            author: item.author,\n                            postId: item.id,\n                            title: item.title,\n                            ups: item.ups,\n                            upVoteRatio: item.upvote_ratio,\n                            url: item.url,\n                            text: item.selftext,\n                            numComments: item.num_comments,\n                            created: item.created_utc,\n                            permalink: item.permalink,\n                        }\n                    )\n                )\n            )\n        })\n    }, [activeSubReddit, dispatch])\n\n\n    return (\n        <main>\n            <SubReddits />\n            <section id=\"posts\">\n                <Switch >\n                    <Route exact path=\"/\">\n                        <PostsList />\n                    </Route>\n                    <Route exact path=\"/Post\">\n                        <Post />\n                    </Route>\n                </Switch>\n            </section>\n        </main>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}