{"ast":null,"code":"var _jsxFileName = \"/Users/pedronunes/Desktop/react/reddit_client/my-app/src/features/main/main.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Switch, Route } from \"react-router-dom\";\nimport './main.css'; // components\n\nimport { SubReddits } from './subReddits/subReddits';\nimport { PostsList } from './posts/postsList';\nimport { Post } from './posts/post/post'; // from postsList\n\nimport { getSubredditPosts } from '../../app/API/Reddit';\nimport { selectSubReddit } from './subReddits/subRedditsSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { addPosts } from '../main/posts/postsSlice';\nimport { selectPosts } from './posts/postsSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Main() {\n  _s();\n\n  const activeSubReddit = useSelector(selectSubReddit);\n  const dispatch = useDispatch();\n  const posts = useSelector(selectPosts);\n  useEffect(() => {\n    getSubredditPosts(activeSubReddit).then(jsonData => {\n      console.log(jsonData);\n      jsonData.forEach(item => dispatch(addPosts(jsonData)));\n    });\n  }, [activeSubReddit, dispatch]);\n  console.log(posts);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(SubReddits, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"posts\",\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(PostsList, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/Post\",\n          children: /*#__PURE__*/_jsxDEV(Post, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Main, \"Xp3VWngC1AAqZxA1x74Zo5PkuMU=\", false, function () {\n  return [useSelector, useDispatch, useSelector];\n});\n\n_c = Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/pedronunes/Desktop/react/reddit_client/my-app/src/features/main/main.js"],"names":["React","Switch","Route","SubReddits","PostsList","Post","getSubredditPosts","selectSubReddit","useDispatch","useSelector","useEffect","addPosts","selectPosts","Main","activeSubReddit","dispatch","posts","then","jsonData","console","log","forEach","item"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,MADJ,EAEIC,KAFJ,QAGO,kBAHP;AAIA,OAAO,YAAP,C,CACA;;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,SAASC,IAAT,QAAqB,mBAArB,C,CACA;;AACA,SAASC,iBAAT,QAAkC,sBAAlC;AACA,SAASC,eAAT,QAAgC,8BAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,QAAT,QAAyB,0BAAzB;AACA,SAASC,WAAT,QAA4B,oBAA5B;;AAIA,OAAO,SAASC,IAAT,GAAgB;AAAA;;AAEnB,QAAMC,eAAe,GAAGL,WAAW,CAACF,eAAD,CAAnC;AACA,QAAMQ,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAMQ,KAAK,GAAGP,WAAW,CAACG,WAAD,CAAzB;AAGAF,EAAAA,SAAS,CAAE,MAAM;AACbJ,IAAAA,iBAAiB,CAACQ,eAAD,CAAjB,CACCG,IADD,CACOC,QAAQ,IAAI;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAA,MAAAA,QAAQ,CAACG,OAAT,CAAkBC,IAAI,IAClBP,QAAQ,CACJJ,QAAQ,CAACO,QAAD,CADJ,CADZ;AAKH,KARD;AASH,GAVQ,EAUN,CAACJ,eAAD,EAAkBC,QAAlB,CAVM,CAAT;AAYII,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AAEJ,sBACI;AAAA,4BACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAS,MAAA,EAAE,EAAC,OAAZ;AAAA,6BACI,QAAC,MAAD;AAAA,gCACI,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,GAAlB;AAAA,iCACI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,OAAlB;AAAA,iCACI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;GApCeH,I;UAEYJ,W,EACPD,W,EACHC,W;;;KAJFI,I","sourcesContent":["import React from 'react';\nimport {\n    Switch,\n    Route\n} from \"react-router-dom\";\nimport './main.css';\n// components\nimport { SubReddits } from './subReddits/subReddits';\nimport { PostsList } from './posts/postsList';\nimport { Post } from './posts/post/post';\n// from postsList\nimport { getSubredditPosts } from '../../app/API/Reddit';\nimport { selectSubReddit } from './subReddits/subRedditsSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { addPosts } from '../main/posts/postsSlice';\nimport { selectPosts } from './posts/postsSlice'; \n\n\n\nexport function Main() {\n    \n    const activeSubReddit = useSelector(selectSubReddit);\n    const dispatch = useDispatch();\n    const posts = useSelector(selectPosts)\n    \n\n    useEffect( () => {\n        getSubredditPosts(activeSubReddit)\n        .then( jsonData => {\n            console.log(jsonData);\n            jsonData.forEach( item => \n                dispatch(\n                    addPosts(jsonData)\n                )\n            )\n        })\n    }, [activeSubReddit, dispatch])\n\n        console.log(posts);\n\n    return (\n        <main>\n            <SubReddits />\n            <section id=\"posts\">\n                <Switch >\n                    <Route exact path=\"/\">\n                        <PostsList />\n                    </Route>\n                    <Route exact path=\"/Post\">\n                        <Post />\n                    </Route>\n                </Switch>\n            </section>\n        </main>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}