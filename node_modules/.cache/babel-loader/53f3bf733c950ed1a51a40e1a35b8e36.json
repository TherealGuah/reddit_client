{"ast":null,"code":"var _jsxFileName = \"/Users/pedronunes/Desktop/react/reddit_client/my-app/src/features/main/subReddits/subReddits.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './subReddits.css';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom'; //API json\n\nimport { getSubReddits } from '../../../app/API/Reddit'; //selectors + actions\n\nimport { selectSubReddit, selectSubReddits, addSubReddit, changeSelectedSubReddit } from './subRedditsSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function SubReddits() {\n  _s();\n\n  const dispatch = useDispatch();\n  const subReddits = useSelector(selectSubReddits);\n  const subReddit = useSelector(selectSubReddit);\n  useEffect(() => {\n    getSubReddits().then(jsonResponse => {\n      jsonResponse.forEach(dataItem => dispatch(addSubReddit({\n        name: dataItem.display_name,\n        url: dataItem.url,\n        id: dataItem.id,\n        icon: dataItem.community_icon.split(\"?\")[0]\n      })));\n    });\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"dropdown\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Mouse over me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        class: \"dropdown-content\",\n        children: subReddits.map(subReddit => /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: dispatch(changeSelectedSubReddit(subReddit.url))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }, this)\n        }, subReddit.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SubReddits, \"siLvxMp1MDklxwtdP7FkWJzsins=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = SubReddits;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"SubReddits\");","map":{"version":3,"sources":["/Users/pedronunes/Desktop/react/reddit_client/my-app/src/features/main/subReddits/subReddits.js"],"names":["React","useEffect","useDispatch","useSelector","Link","getSubReddits","selectSubReddit","selectSubReddits","addSubReddit","changeSelectedSubReddit","SubReddits","dispatch","subReddits","subReddit","then","jsonResponse","forEach","dataItem","name","display_name","url","id","icon","community_icon","split","map"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,kBAAP;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,IAAT,QAAqB,kBAArB,C,CACA;;AACA,SAASC,aAAT,QAA8B,yBAA9B,C,CACA;;AACA,SACIC,eADJ,EAEIC,gBAFJ,EAGIC,YAHJ,EAIIC,uBAJJ,QAKW,mBALX;;AAUA,OAAO,SAASC,UAAT,GAAsB;AAAA;;AACzB,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAMU,UAAU,GAAGT,WAAW,CAACI,gBAAD,CAA9B;AACA,QAAMM,SAAS,GAAGV,WAAW,CAACG,eAAD,CAA7B;AAEAL,EAAAA,SAAS,CAAE,MAAM;AACbI,IAAAA,aAAa,GAAGS,IAAhB,CAAqBC,YAAY,IAAI;AAC7BA,MAAAA,YAAY,CAACC,OAAb,CAAqBC,QAAQ,IAAIN,QAAQ,CACrCH,YAAY,CACR;AACIU,QAAAA,IAAI,EAAED,QAAQ,CAACE,YADnB;AAEIC,QAAAA,GAAG,EAAEH,QAAQ,CAACG,GAFlB;AAGIC,QAAAA,EAAE,EAAEJ,QAAQ,CAACI,EAHjB;AAIIC,QAAAA,IAAI,EAAEL,QAAQ,CAACM,cAAT,CAAwBC,KAAxB,CAA8B,GAA9B,EAAmC,CAAnC;AAJV,OADQ,CADyB,CAAzC;AASH,KAVL;AAWH,GAZQ,EAYN,CAACb,QAAD,CAZM,CAAT;AAeA,sBACI;AAAA,2BAYI;AAAK,MAAA,KAAK,EAAC,UAAX;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAI,QAAA,KAAK,EAAC,kBAAV;AAAA,kBACMC,UAAU,CAACa,GAAX,CAAgBZ,SAAS,iBACvB,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,GAAT;AAAA,iCACI;AACI,YAAA,OAAO,EAAEF,QAAQ,CAACF,uBAAuB,CAACI,SAAS,CAACO,GAAX,CAAxB;AADrB;AAAA;AAAA;AAAA;AAAA;AADJ,WAAkBP,SAAS,CAACQ,EAA5B;AAAA;AAAA;AAAA;AAAA,gBADF;AADN;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAZJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA6BH;;GAjDeX,U;UACKR,W,EACEC,W,EACDA,W;;;KAHNO,U;AAiDf","sourcesContent":["import React from 'react';\nimport './subReddits.css';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\n//API json\nimport { getSubReddits } from '../../../app/API/Reddit';\n//selectors + actions\nimport {\n    selectSubReddit,\n    selectSubReddits, \n    addSubReddit,\n    changeSelectedSubReddit\n    } from './subRedditsSlice';\n\n\n\n\nexport function SubReddits() {\n    const dispatch = useDispatch();\n    const subReddits = useSelector(selectSubReddits);\n    const subReddit = useSelector(selectSubReddit);\n    \n    useEffect( () => {\n        getSubReddits().then(jsonResponse => {\n                jsonResponse.forEach(dataItem => dispatch(\n                    addSubReddit(\n                        {\n                            name: dataItem.display_name,\n                            url: dataItem.url,\n                            id: dataItem.id,\n                            icon: dataItem.community_icon.split(\"?\")[0],\n                        }\n                    )));\n            })\n    }, [dispatch]);\n    \n\n    return (\n        <section>\n            {/* <label>Sub Reddits</label>\n            <select>\n                {/* { subReddits.map( subReddit => (\n                    <option \n                        value={subReddit.name} \n                        key={subReddit.id}\n                        onChange={()=> dispatch(changeSelectedSubReddit())}\n                        >{subReddit.url}</option>)\n                )} *\n                \n            </select> */}\n            <div class=\"dropdown\">\n                <span>Mouse over me</span>\n                <ul class=\"dropdown-content\">\n                    { subReddits.map( subReddit => (\n                        <Link to=\"/\" key={subReddit.id}>\n                            <li\n                                onClick={dispatch(changeSelectedSubReddit(subReddit.url))}\n                            >\n\n                            </li>\n                        </Link>\n                    ))}\n                </ul>\n            </div>\n        </section>\n    );\n};"]},"metadata":{},"sourceType":"module"}